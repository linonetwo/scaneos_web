const zhShared = {
  Id: 'ID',
  id: 'ID',
  timestamp: '时间戳',
  field: '字段',
  value: '值',
  transactions: '交易',
  blockID: '区块ID',
  transactionID: '交易ID',
  actionID: '消息ID',
  account: '账户',
  pending: '等待',
  createdAt: '创建日期',
  updatedAt: '更新日期',
  cpu: '计算时间',
  net: '带宽',
  to: '给',
};
export const zh = {
  block: {
    ...zhShared,
    producerAccountID: '超级节点',
    prevBlockID: '父区块ID',
    blockNum: '区块高度',
    transactionMerkleRoot: '交易的Merkle根节点',
  },
  transaction: {
    ...zhShared,
    refBlockPrefix: '引用区块前缀',
    refBlockNum: '引用区块高度',
    expiration: '过期时间',
    PendingTransactions: '待确认的交易',
    ContractInternalTransactions: 'Contract Internal Transactions',
    actions: '消息',
    status: '状态',
    sequenceNum: '序列号',
    type: '类型',
  },
  account: {
    ...zhShared,
    name: '账户名',
    accountName: '账户名',
    eosBalance: '可用余额',
    totalAssets: '总资产',
    eosStaked: '已质押的余额',
    eosTotal: '余额共计',
    ramAvailable: '可用内存',
    netAvailable: '可用带宽',
    cpuAvailable: '可用计算时间',
    ramMax: '总内存',
    netMax: '总带宽',
    cpuMax: '总计算时间',
    ramValue: '内存价值',

    voterInfo: '投票质押信息',
    proxy: '代理',
    lastVoteWeight: '剩余的投票权',
    proxiedVoteWeight: '已代理的投票权',
    isProxy: '是否为代理',
    deferredTrxId: '延后的交易 ID',
    lastUnstakeTime: '最近的解除质押时间',
    staked: '已质押的余额',
    producers: '已投票的超级节点',
    selfDelegatedBandwidth: '自我代理的带宽',
    ramBytes: '内存大小(Byte)',
    netWeight: '带宽权重',
    cpuWeight: 'CPU权重',
    netRefund: '取消带宽抵押的退款',
    cpuRefund: '取消CPU抵押的退款',
    totalResources: '拥有的资源总量',
    refund: '取消抵押的退款',

    tokenBalance: '余额',
    unstakingBalance: '未锁定的余额',
    transactionMerkleRoot: '交易的 Merkle 根节点',
    permission: '权限',
    sequenceNum: '序列号',
    signatures: '签名',
    scope: 'scope',
    readScope: 'readScope',

    Auction: '靓号竞拍',
    newName: '靓号',
    offerBid: '出价',
    highBidder: '最高出价者',
    highBid: '目前最高出价',
    lastBidTime: '出价时间',
    tryName: '搜索靓号是否正在竞拍',
    notInAuction: '此账户名尚未参与竞拍，',
    nearestResult: '为您展示最相似的一个靓号',

    weight: '权重',
    permName: '权限组名',
    parent: '上级账号',
    threshold: '动用账户所需的最小权限',
    keys: '公钥列表',
    subAccounts: '子账户列表',
  },
  action: {
    ...zhShared,
    data: '数据',
    name: '操作类型',
    handlerAccountName: '处理本操作的账户',
    authorization: '授权',

    transferTo: '转账给',
    delegate: '租借',
    undelegate: '取消租借',
    transferOn: '接收方获得抵押而来的资源和投票权。',
    transferOff: '发送方保留抵押而来的资源和投票权，仅暂时借给接收方。',

    transfer: '转账',
    setabi: '部署合约',
    newaccount: '创建账户',
    updateauth: '更新权限',
    buyram: '购买内存',
    buyrambytes: '按字节数购买内存',
    sellram: '卖出内存',
    delegatebw: '租借资源',
    undelegatebw: '取消资源租借',
    refund: '抵押款归还',
    regproducer: '申请成为超级节点',
    bidname: '竞拍靓号',
    voteproducer: '为超级节点投票',
    claimrewards: '申请获取超级节点奖励',
    create: '创建',
    issue: '发行资产',
  },
  token: {
    issuer: '发行方',
    maximumSupply: '发行量',
    createdAt: '发行时间',
  },
};

const enShared = {
  Id: 'ID',
  id: 'ID',
  blockID: 'BlockID',
  transactionID: 'TxnID',
  actionID: 'MsgID',
  timestamp: 'Timestamp',
  createdAt: 'Created',
  updatedAt: 'Updated',
  cpu: 'CPUTime',
  net: 'NetBandWidth',
};
export const en = {
  block: {
    ...enShared,
    account: 'Account',
    producerAccountID: 'Producer',
    blockID: 'BlockID',
    prevBlockID: 'PrevBlockID',
    blockNum: 'Block#',
  },
  transaction: {
    ...enShared,
    refBlockNum: 'RefBlock#',
    refBlockPrefix: 'Ref Block Prefix',
    expiration: 'Expiration',
    PendingTransactions: 'Pending Transactions',
    ContractInternalTransactions: 'Contract Internal Transactions',
    actions: 'Actions',
    type: 'Type',
  },
  account: {
    ...enShared,
    name: 'Name',
    accountName: 'Name',
    eosBalance: 'Balance',
    totalAssets: 'TotalAssets',
    eosStaked: 'Staked',
    eosTotal: 'Total',
    ramAvailable: 'RAM Available',
    netAvailable: 'Net Available',
    cpuAvailable: 'CPU Available',
    ramMax: 'Max Ram',
    netMax: 'Max Net',
    cpuMax: 'Max CPU',
    ramValue: 'RamValue',
    refund: 'Refund',

    unstakingBalance: 'Unstaking',
    transactionMerkleRoot: 'Transaction Merkle Root',
    permission: 'Permission',
    sequenceNum: 'Sequence#',
    signatures: 'Signatures',
    scope: 'Scope',
    readScope: 'Read Scope',

    newName: 'Name Auction',
    offerBid: 'offers',
    highBidder: 'HighestBidder',
    highBid: 'HighestBid',
    lastBidTime: 'LastBidTime',
    tryName: 'Search a name you want',
    notInAuction: 'Not in auction. ',
    nearestResult: 'Displaying a most similar result for you.',
  },
  action: {
    ...enShared,
    data: 'Data',
    handlerAccountName: 'Handler',
    name: 'ActionName',
    authorization: 'Authorization',

    transferTo: 'TransferTo',
    transferOn: 'New account gains staking control and voting rights.',
    transferOff: 'owner retains staking control and voting rights.',

    transfer: 'Transfer',
    setabi: 'SetABI',
    newaccount: 'NewAccount',
    updateauth: 'UpdateAuth',
    buyram: 'BuyRam',
    buyrambytes: 'BuyRamBytes',
    sellram: 'SellRam',
    delegatebw: 'DelegateBW',
    undelegatebw: 'UndelegateBW',
    refund: 'Refund',
    regproducer: 'RegProducer',
    bidname: 'BidName',
    voteproducer: 'VoteProducer',
    claimrewards: 'ClaimRewards',
    create: 'Create',
    issue: 'Issue',
  },
  token: {
    issuer: 'Issuer',
    maximumSupply: 'MaximumSupply',
    createdAt: 'CreatedAt',
  },
};
